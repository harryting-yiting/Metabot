<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="rviz" default = "true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="extra_gazebo_args" default="--verbose"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find niryo_robot_gazebo)/worlds/niryo_empty_world.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

    <arg name="tcp_ip" default="127.0.0.1"/>
    <arg name="tcp_port" default="10000"/>
	
    <node name="server_endpoint" pkg="ros_tcp_endpoint" type="default_server_endpoint.py" args="--wait" output="screen" respawn="true">
		<param name="tcp_ip" type="string" value="$(arg tcp_ip)"/>
        <param name="tcp_port" type="int" value="$(arg tcp_port)"/>
	</node>
    <node name="mover" pkg="niryo_moveit" type="mover.py" args="--wait" output="screen"/>
    <include file="$(find niryo_moveit)/launch/demo.launch" />
      <!-- Spawn the URDF objects into Gazebo -->
  <include file="$(find niryo_moveit)/launch/spawn_robots.launch"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robots_state_publisher">
    <param name="publish_frequency" type="double" value="50.0"/>
  </node>

</launch>
